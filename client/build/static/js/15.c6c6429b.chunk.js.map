{"version":3,"sources":["pages/SignupSteps.js"],"names":["useStyles","makeStyles","theme","root","position","top","form","& > *","margin","spacing","width","typography","padding","float","card","textAlign","button","height","header","color","SignupSteps","_useAuth","useAuth0","user","getAccessTokenSilently","classes","_useState","useState","step","handle","bio","location","_useState2","Object","C_Users_cochr_Desktop_social_media_r_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","setupState","setSetupState","handleInputChange","event","_event$target","target","name","value","C_Users_cochr_Desktop_social_media_r_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_cochr_Desktop_social_media_r_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","done","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9__","className","variant","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_11__","raised","onSubmit","e","preventDefault","noValidate","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7__","onChange","required","id","label","multiline","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","onClick","newUser","email","API","addUser","then","res","console","log","catch","err","accessToken","domain","_ref","C_Users_cochr_Desktop_social_media_r_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_cochr_Desktop_social_media_r_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","options","wrap","_context","prev","next","audience","concat","scope","sent","method","url","sub","headers","authorization","content-type","data","user_metadata","Axios","request","response","error","t0","message","stop","apply","this","arguments","getToken","window","reload"],"mappings":"ySAUMA,EAAYC,IAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,WACVC,IAAK,SAETC,KAAM,CACJC,QAAS,CACPC,OAAQN,EAAMO,QAAQ,GACtBC,MAAO,SAGXC,WAAY,CACRC,QAAS,GACTC,MAAO,QAEXC,KAAM,CACFJ,MAAO,OACPK,UAAW,SACXH,QAAS,IAEbI,OAAQ,CACJR,OAAQ,EACRK,MAAO,QACPI,OAAQ,IAEZC,OAAQ,CACJC,MAAO,YAIA,SAASC,IAAc,IAAAC,EAEOC,cAAjCC,EAF0BF,EAE1BE,KAAMC,EAFoBH,EAEpBG,uBACRC,EAAUzB,IAHkB0B,EAKEC,mBAAS,CACzCC,KAAM,EACNC,OAAQ,GACRC,IAAK,GACLC,SAAU,KAToBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAK3BS,EAL2BH,EAAA,GAKfI,EALeJ,EAAA,GAa5BK,EAAoB,SAACC,GAAU,IAAAC,EACTD,EAAME,OAAtBC,EADyBF,EACzBE,KAAMC,EADmBH,EACnBG,MACdN,EAAcH,OAAAU,EAAA,EAAAV,CAAA,GAAIE,EAALF,OAAAW,EAAA,EAAAX,CAAA,GAAkBQ,EAAOC,MAGpCG,EAAO,WAETT,EAAcH,OAAAU,EAAA,EAAAV,CAAA,GAAIE,EAAL,CAAiBP,KAAMO,EAAWP,KAAO,MAiD1D,OAAOO,EAAWP,MACd,KAAK,EACD,OACIkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,UAAW1B,EAAQP,OAAQkC,QAAQ,KAAKjC,MAAM,eAA1D,QACUgB,EAAWP,KADrB,MAGAkB,EAAAC,EAAAC,cAAA,OAAKG,UAAW1B,EAAQtB,MACpB2C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMF,UAAW1B,EAAQX,KAAMwC,QAAM,GACjCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,UAAW1B,EAAQd,WAAYyC,QAAQ,KAAKjC,MAAM,eAA9D,2BAGA2B,EAAAC,EAAAC,cAAA,QACAG,UAAW1B,EAAQnB,KACnBiD,SAAU,SAAAC,GAAOA,EAAEC,kBACnBC,YAAU,EACVC,aAAa,OAETb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAWC,SAAUxB,EAAmByB,UAAQ,EAACrB,KAAK,SAASsB,GAAG,iBAAiBC,MAAM,SAASZ,QAAQ,WAAWa,WAAS,IAC9HnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQf,UAAW1B,EAAQT,OAAQmD,QAAStB,EAAM1B,MAAM,WAAxD,kBAQxB,KAAK,EACD,OACI2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,UAAW1B,EAAQP,OAAQkC,QAAQ,KAAKjC,MAAM,eAA1D,QACUgB,EAAWP,KADrB,MAGAkB,EAAAC,EAAAC,cAAA,OAAKG,UAAW1B,EAAQtB,MACpB2C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMF,UAAW1B,EAAQX,KAAMwC,QAAM,GACjCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,UAAW1B,EAAQd,WAAYyC,QAAQ,KAAKjC,MAAM,eAA9D,yBAGA2B,EAAAC,EAAAC,cAAA,QACAG,UAAW1B,EAAQnB,KACnBiD,SAAU,SAAAC,GAAOA,EAAEC,kBACnBC,YAAU,EACVC,aAAa,OAETb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAWC,SAAUxB,EAAmBI,KAAK,WAAWsB,GAAG,iBAAiBC,MAAM,OAAOZ,QAAQ,aACjGN,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQf,UAAW1B,EAAQT,OAAQmD,QAAStB,EAAM1B,MAAM,WAAxD,YAQxB,KAAK,EACD,OACI2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,UAAW1B,EAAQP,OAAQkC,QAAQ,KAAKjC,MAAM,eAA1D,QACUgB,EAAWP,KADrB,MAGAkB,EAAAC,EAAAC,cAAA,OAAKG,UAAW1B,EAAQtB,MACpB2C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMF,UAAW1B,EAAQX,KAAMwC,QAAM,GACjCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,UAAW1B,EAAQd,WACnByC,QAAQ,KAAKjC,MAAM,eAFvB,aAKA2B,EAAAC,EAAAC,cAAA,QACAG,UAAW1B,EAAQnB,KACnBiD,SAAU,SAAAC,GAAOA,EAAEC,kBACnBC,YAAU,EACVC,aAAa,OAETb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIC,SAAUxB,EACVI,KAAK,MAAMsB,GAAG,iBACdC,MAAM,MAAMZ,QAAQ,WACpBa,WAAS,IAEbnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIf,UAAW1B,EAAQT,OACnBmD,QA9HhB,WAEZ,IAAIC,EAAU,CACVvC,OAAQM,EAAWN,OACnBC,IAAKK,EAAWL,IAChBC,SAAUI,EAAWJ,SACrBsC,MAAO9C,EAAK8C,OAEhBC,IAAIC,QAAQH,GACPI,KAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACxBG,MAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,KAG9B,IACIC,EADEC,EAAS,8BAED,eAAAC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,EAAAnC,EAAAoC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAnC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWjE,EAAuB,CACzCkE,SAAQ,WAAAC,OAAaZ,EAAb,YACRa,MAAO,sBAJA,OAETd,EAFSS,EAAAM,KAOLR,EAAU,CACVS,OAAQ,QACRC,IAAG,WAAAJ,OAAaZ,EAAb,kBAAAY,OAAoCpE,EAAKyE,KAC5CC,QAAS,CAACC,cAAa,UAAAP,OAAYb,GAAeqB,eAAgB,oBAClEC,KAAM,CAACC,cAAe,CAClBxE,OAAQM,EAAWN,OACnBC,IAAKK,EAAWL,IAChBC,SAAUI,EAAWJ,YAG7BuE,IAAMC,QAAQlB,GAASb,KAAK,SAACgC,GACzB9B,QAAQC,IAAI6B,EAASJ,QACtBxB,MAAM,SAAC6B,GACN/B,QAAQ+B,MAAMA,KApBTlB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmB,GAAAnB,EAAA,SAuBTb,QAAQC,IAAIY,EAAAmB,GAAEC,SAvBL,yBAAApB,EAAAqB,SAAAxB,EAAA,iBAAH,yBAAAJ,EAAA6B,MAAAC,KAAAC,aAAA,EA2BdC,GACAC,OAAOlF,SAASmF,UAmF8B/F,MAAM,WAF5B","file":"static/js/15.c6c6429b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Axios from \"axios\";\r\nimport API from \"../Util/API\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"relative\",\r\n        top: \"100px\"\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '50ch',\r\n      },\r\n    },\r\n    typography: {\r\n        padding: 20,\r\n        float: \"left\"\r\n    },\r\n    card: {\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        padding: 20\r\n    },\r\n    button: {\r\n        margin: 5,\r\n        float: \"right\",\r\n        height: 60\r\n    },\r\n    header: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n\r\nexport default function SignupSteps() {\r\n\r\n    const { user, getAccessTokenSilently } = useAuth0();\r\n    const classes = useStyles();\r\n\r\n    const [setupState, setSetupState] = useState({ \r\n        step: 1,\r\n        handle: \"\",\r\n        bio: \"\",\r\n        location: \"\",\r\n\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setSetupState({...setupState, [name]: value})\r\n    };\r\n\r\n    const done = () => {\r\n        //if user leaves the step blank return so they dont mess up functionality\r\n        setSetupState({...setupState, step: setupState.step + 1, })\r\n    }\r\n\r\n    const addUser = () => {\r\n        //make a post to /api/signup and put the\r\n        let newUser = {\r\n            handle: setupState.handle,\r\n            bio: setupState.bio,\r\n            location: setupState.location,\r\n            email: user.email\r\n        } \r\n        API.addUser(newUser)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n            \r\n        //metadata\r\n        const domain = \"christophernc.us.auth0.com\";\r\n        let accessToken;\r\n        const getToken = async () => {\r\n            try {\r\n                accessToken = await getAccessTokenSilently({\r\n                  audience: `https://${domain}/api/v2/`,\r\n                  scope: \"read:current_user\",\r\n                });\r\n                //add sql user data to auth0 metadata \r\n                var options = {\r\n                    method: 'PATCH',\r\n                    url: `https://${domain}/api/v2/users/${user.sub}`,\r\n                    headers: {authorization: `Bearer ${accessToken}`, 'content-type': 'application/json'},\r\n                    data: {user_metadata: {\r\n                        handle: setupState.handle,\r\n                        bio: setupState.bio,\r\n                        location: setupState.location,\r\n                    }}\r\n                };\r\n                Axios.request(options).then((response) => {\r\n                    console.log(response.data);\r\n                }).catch((error) => {\r\n                    console.error(error);\r\n                });\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        }\r\n\r\n        getToken();\r\n        window.location.reload();\r\n    }\r\n\r\n    switch(setupState.step) {\r\n        case 1:\r\n            return (\r\n                <>\r\n                    <Typography className={classes.header} variant=\"h2\" color=\"textPrimary\" >\r\n                        Step {setupState.step}/3\r\n                    </Typography>\r\n                    <div className={classes.root}>\r\n                        <Card className={classes.card} raised>\r\n                            <Typography className={classes.typography} variant=\"h5\" color=\"textPrimary\" >\r\n                                Create your user handle\r\n                            </Typography>\r\n                            <form \r\n                            className={classes.form} \r\n                            onSubmit={e => { e.preventDefault() }} \r\n                            noValidate \r\n                            autoComplete=\"off\"\r\n                            >\r\n                                <TextField onChange={handleInputChange} required name=\"handle\" id=\"outlined-basic\" label=\"Handle\" variant=\"outlined\" multiline/>\r\n                                <Button className={classes.button} onClick={done} color=\"primary\">\r\n                                    Add Handle\r\n                                </Button>\r\n                            </form>\r\n                        </Card>\r\n                    </div>\r\n                </>\r\n            );\r\n        case 2:\r\n            return (\r\n                <>\r\n                    <Typography className={classes.header} variant=\"h2\" color=\"textPrimary\" >\r\n                        Step {setupState.step}/3\r\n                    </Typography>\r\n                    <div className={classes.root}>\r\n                        <Card className={classes.card} raised>\r\n                            <Typography className={classes.typography} variant=\"h5\" color=\"textPrimary\" >\r\n                                Add Where You're From\r\n                            </Typography>\r\n                            <form \r\n                            className={classes.form} \r\n                            onSubmit={e => { e.preventDefault() }}\r\n                            noValidate \r\n                            autoComplete=\"off\"\r\n                            >\r\n                                <TextField onChange={handleInputChange} name=\"location\" id=\"outlined-basic\" label=\"City\" variant=\"outlined\" />\r\n                                <Button className={classes.button} onClick={done} color=\"primary\">\r\n                                    Done\r\n                                </Button>\r\n                            </form>\r\n                        </Card>\r\n                    </div>\r\n                </>\r\n            );\r\n        case 3:\r\n            return (\r\n                <>\r\n                    <Typography className={classes.header} variant=\"h2\" color=\"textPrimary\" >\r\n                        Step {setupState.step}/3\r\n                    </Typography>\r\n                    <div className={classes.root}>\r\n                        <Card className={classes.card} raised>\r\n                            <Typography \r\n                                className={classes.typography} \r\n                                variant=\"h5\" color=\"textPrimary\" >\r\n                                Add a Bio\r\n                            </Typography>\r\n                            <form \r\n                            className={classes.form} \r\n                            onSubmit={e => { e.preventDefault() }}\r\n                            noValidate \r\n                            autoComplete=\"off\"\r\n                            >\r\n                                <TextField \r\n                                    onChange={handleInputChange} \r\n                                    name=\"bio\" id=\"outlined-basic\" \r\n                                    label=\"Bio\" variant=\"outlined\" \r\n                                    multiline\r\n                                />\r\n                                <Button \r\n                                    className={classes.button} \r\n                                    onClick={addUser} color=\"primary\">\r\n                                    Add Bio\r\n                                </Button>\r\n                            </form>\r\n                        </Card>\r\n                    </div>\r\n                </>\r\n            );\r\n            default:\r\n    }\r\n}"],"sourceRoot":""}