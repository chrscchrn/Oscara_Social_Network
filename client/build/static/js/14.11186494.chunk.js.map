{"version":3,"sources":["components/TransitionComment.js","components/DeletePost.js","components/Post.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","borderRadius","outline","paper","color","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","width","textfield","TransitionsModal","props","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","body","_React$useState4","replyBody","setReplyBody","currentUser","postId","parentReplyHandler","replyCount","imageName","handleClose","react_default","a","createElement","Button","type","onClick","className","Chat_default","ChatBubbleOutline_default","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Grid","container","direction","justify","id","TextField","multiline","onChange","e","target","value","name","label","variant","rows","API","replyToPost","handle","then","res","console","log","catch","err","DeletePost","handleDelete","style","marginTop","DeleteOutline_default","Delete_default","withStyles","card","& > *","margin","marginBottom","replyCard","paddingLeft","paddingRight","textAlignLast","ul","paddingInlineStart","listStyleType","textAlign","image","maxHeight","maxWidth","objectFit","content","minWidth","button","height","overflow","typography","textDecoration","otherUser","_props$post","post","createdAt","likeCount","stateLikeCount","setStateLikeCount","stateReplyCount","setStateReplyCount","_React$useState5","_React$useState6","replies","setReplies","_React$useState7","_React$useState8","_React$useState9","_React$useState10","showReplies","setShowReplies","useRef","timeDate","Date","when","getMonth","getDate","getFullYear","useEffect","getReplies","data","event","reason","replyComponents","length","map","reply","key","concat","PostId","Card","item","xs","sm","src","alt","Typography","Snackbar","autoHideDuration","Alert_Alert","assign","elevation","severity","raised","Avatar","avatar","CardContent","react_router_dom","to","window","location","pathname","removePost","alert","onSubmit","preventDefault","persist","likePost","error","likes","Favorite_default","FavoriteBorder_default","replyNum","Portal","current","ref"],"mappings":"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","file":"static/js/14.11186494.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport axios from 'axios';\r\nimport API from '../Util/API';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 10,\r\n        outline: 0,\r\n    },\r\n    paper: {\r\n        color: \"black\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        borderRadius: 6,\r\n        width: \"40%\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        outline: 0,\r\n    },\r\n    textfield: {\r\n        width: \"80%\"\r\n    }\r\n    }));\r\n\r\nexport default function TransitionsModal(props) {\r\n    const classes = useStyles();\r\n    const [ open, setOpen ] = React.useState(false);\r\n    const [ replyBody, setReplyBody ] = React.useState({body: \"\"});\r\n\r\n    const { currentUser, postId, parentReplyHandler, replyCount, imageName } = props;\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let handleInputChange = e => {\r\n        setReplyBody(e.target.value);\r\n    }\r\n\r\n    let handleReply = e => {\r\n        if (currentUser && imageName) {\r\n            \r\n            API.replyToPost({\r\n                body: replyBody,\r\n                handle: currentUser,\r\n                imageName: imageName,\r\n                postId: postId,\r\n            })\r\n                .then(res => console.log(res) )\r\n                .catch(err => console.log(err) );\r\n\r\n            handleClose();\r\n            parentReplyHandler('go');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button type=\"button\" color=\"primary\" onClick={handleOpen} className=\"lock\">\r\n                <h2>\r\n                    {replyCount}\r\n                    <ChatIcon color=\"primary\" className=\"icon-lock\"/>\r\n                    <ChatBubbleOutlineIcon color=\"primary\" className=\"icon-unlock\"/>\r\n                </h2>\r\n            </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                <div className={classes.paper}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <h2 id=\"transition-modal-title\">Reply to User's Status</h2>\r\n                        <TextField \r\n                            className={classes.textfield}\r\n                            multiline \r\n                            onChange={handleInputChange} \r\n                            name=\"body\" \r\n                            id=\"filled-basic\" \r\n                            label=\"What would you like to say?\" \r\n                            variant=\"filled\"\r\n                            rows={4}\r\n                        />\r\n                    </Grid>\r\n                    <Button type=\"button\" color=\"primary\" onClick={handleReply}>\r\n                        Reply\r\n                    </Button>\r\n                </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nexport default function DeletePost(props) {\r\n    return (\r\n        <div>\r\n            <Button onClick={props.handleDelete} className=\"lock\" color=\"primary\" style={{ marginTop: \"50px\" }}>\r\n                <DeleteOutlineIcon className=\"icon-unlock\"/>\r\n                <DeleteIcon className=\"icon-lock\"/>            \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TransitionComment from './TransitionComment';\r\nimport DeletePost from './DeletePost';\r\nimport Axios from 'axios';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Avatar } from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Portal from '@material-ui/core/Portal';\r\nimport API from '../Util/API';\r\n\r\nconst styles = {\r\n    card: {\r\n        '& > *': {\r\n            width: '55%',\r\n        },\r\n        padding: 5,\r\n        display: 'flex',\r\n        margin: \"0 auto\",\r\n        marginBottom: 8,\r\n        marginTop: 8,\r\n        // background: \"rgb(240, 245, 245)\",\r\n    },\r\n    replyCard: {\r\n        width: \"50%\",\r\n        paddingLeft: \"5%\",\r\n        paddingRight: \"5%\",\r\n        textAlignLast: \"start\",\r\n        marginTop: 5\r\n    },\r\n    ul: {\r\n        paddingInlineStart: \"0px\",\r\n        listStyleType: \"none\",\r\n        textAlign: \"-webkit-center\",\r\n    },\r\n    image: {\r\n        borderRadius: \"180px\",\r\n        maxHeight: \"200px\",\r\n        maxWidth: \"200px\",\r\n        objectFit: \"cover\",\r\n    },\r\n    content: {\r\n        width: \"-webkit-fill-available\",\r\n        minWidth: 120,\r\n        maxWidth: 240,\r\n        padding: 0,\r\n    },\r\n    button: {\r\n        width: \"7em\",\r\n        height: \"5em\",\r\n        padding: \"1em, 2em\",\r\n        overflow: \"hidden\",\r\n    },\r\n    typography: {\r\n        padding: 5,\r\n        textDecoration: \"none\",\r\n    },\r\n}\r\n\r\nfunction Post(props) {\r\n//userHandle\r\n    const { imageName, otherUser, currentUser, classes, post : { body, createdAt, image, handle, likeCount, id, replyCount} } = props;\r\n    const [ stateLikeCount, setStateLikeCount ] = React.useState();\r\n    const [ stateReplyCount, setStateReplyCount ] = React.useState();\r\n    const [ replies, setReplies ] = React.useState([]);\r\n    const [ open, setOpen ] = React.useState(false);\r\n    const [ showReplies, setShowReplies ] = React.useState(false);\r\n    \r\n    const container = React.useRef(null);\r\n    const handleShowReplies = () => {\r\n        setShowReplies(!showReplies);\r\n    }\r\n    const handleDelete = () => {\r\n        API.removePost(id)\r\n            .then(res => {\r\n                alert(\"Post Deleted\");\r\n                console.log(res);\r\n            }).catch(err => {\r\n                console.log(err);\r\n                alert(\"error deleting post\");\r\n            });\r\n    }\r\n\r\n    var timeDate = new Date(createdAt);\r\n    let when = timeDate.getMonth() + \"-\" + (timeDate.getDate()) + \"-\" + timeDate.getFullYear();\r\n\r\n    React.useEffect(() => {\r\n        setStateLikeCount(likeCount);\r\n        setStateReplyCount(replyCount);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (stateReplyCount > 0) {\r\n\r\n            API.getReplies(id)\r\n                .then(res => setReplies(res.data))\r\n                .catch(err => console.log(err)) \r\n        }\r\n    }, [stateReplyCount]);\r\n    \r\n    function like(event) {\r\n        event.preventDefault();\r\n        event.persist();\r\n        let postId = event.target.id;\r\n        API.likePost(postId, currentUser)\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    setOpen(true);\r\n                    return;\r\n                }\r\n                let likes = stateLikeCount;\r\n                likes += 1;\r\n                setStateLikeCount(likes);\r\n            }).catch(err => {\r\n                console.log(err);\r\n                alert(\"error liking post\", err);\r\n            });\r\n    }\r\n    function updateReplyCount() {\r\n        let replyNum = stateReplyCount;\r\n        replyNum += 1;\r\n        setStateReplyCount(replyNum);\r\n    }\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    \r\n    let replyComponents = replies.length > 0 ? replies.map(reply => \r\n        <li key={`${reply.id}:${reply.PostId}`}>\r\n            <Card className={classes.replyCard}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={4} sm={4}>\r\n                        <img src={reply.imageName} alt={reply.handle} className=\"replyAvatar\"/>\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={8}>\r\n                        <Typography className={classes.typography} variant=\"h6\">\r\n                            <strong>{reply.handle}</strong>\r\n                        </Typography>\r\n                        <Typography className={classes.typography} variant=\"body1\">\r\n                            <strong>{reply.body}</strong>\r\n                        </Typography>\r\n                        <Typography className={classes.typography} variant=\"body2\" color=\"textSecondary\">\r\n                            <strong>{new Date(reply.createdAt).getMonth() + \"-\" + new Date(reply.createdAt).getDate() + \"-\" + new Date(reply.createdAt).getFullYear()}</strong>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>    \r\n            </Card>\r\n        </li> \r\n    ) : null;\r\n\r\n    return (\r\n        <li key={id}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    You've already liked this post\r\n                </Alert>\r\n            </Snackbar>\r\n            <Card className={classes.card} raised>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    {otherUser ? \r\n                    <Avatar alt={image} src={\"../\" + image} className={classes.avatar} key={image}/>\r\n                    :\r\n                    <Avatar alt={image} src={image} className={classes.avatar} key={image}/>}\r\n                </Grid>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"space-around\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    <CardContent className={classes.content}>\r\n                        <Link to={\"/user/\" + handle} className={classes.typography}>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\">\r\n                                <strong id=\"one-point-one-rem\">{handle}</strong>\r\n                            </Typography>\r\n                        </Link>\r\n                        <Typography className={classes.typography} variant=\"body1\">\r\n                            <strong>{body}</strong>\r\n                        </Typography>\r\n                        <Typography className={classes.typography} variant=\"body2\" color=\"textSecondary\">\r\n                            <strong>{when}</strong>\r\n                        </Typography>\r\n                        {replies.length > 0 ? \r\n                            <Button type=\"button\" onClick={handleShowReplies} color=\"primary\">\r\n                                {showReplies ? 'Hide Replies' : \"Show Replies\"}\r\n                            </Button>\r\n                        :\r\n                            null\r\n                        }\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >   \r\n                    {window.location.pathname === '/profile' ? <DeletePost handleDelete={handleDelete}/> : <p></p>}\r\n                    <form onSubmit={like} id={id} key={id}>\r\n                        <Button type=\"submit\" className={classes.button + \" lock\"} color=\"primary\" key={id}>\r\n                            <h2>\r\n                                {stateLikeCount}\r\n                            </h2>\r\n                            \r\n                            <FavoriteIcon color=\"primary\" className=\"icon-lock\"/>\r\n                            <FavoriteBorderIcon color=\"primary\" className=\"icon-unlock\"/>\r\n                        </Button>\r\n                    </form>\r\n                    <TransitionComment \r\n                        currentUser={currentUser} \r\n                        postId={id} \r\n                        parentReplyHandler={updateReplyCount} \r\n                        replyCount={stateReplyCount} \r\n                        replies={replies}\r\n                        imageName={imageName}\r\n                    />\r\n                </Grid>\r\n            </Card>\r\n            {showReplies ? (\r\n                <Portal container={container.current}>\r\n                    <ul className={classes.ul}>\r\n                        {replyComponents}\r\n                    </ul>\r\n                </Portal>\r\n            ) : null}\r\n            <div className={classes.alert} ref={container} />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Post);\r\n\r\n"],"sourceRoot":""}