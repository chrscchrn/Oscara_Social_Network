{"version":3,"sources":["pages/NoMatch.js","components/private.js","components/LoginButton.js","components/LogoutButton.js","components/Top.js","App.js","registerServiceWorker.js","index.js","config.js","components/Loading.js"],"names":["NoMatch","react_default","a","createElement","Fragment","role","aria-label","PrivateRoute","_ref","component","args","Object","objectWithoutProperties","react_router","assign","withAuthenticationRequired","onRedirecting","Loading","LoginButton","loginWithRedirect","useAuth0","Button","style","color","onClick","LogoutButton","logout","returnTo","window","location","origin","useStyles","makeStyles","theme","root","flexGrow","title","login","arrow","Top","_useAuth","isAuthenticated","isLoading","classes","className","AppBar","Toolbar","Typography","variant","components_LogoutButton","components_LoginButton","ProfilePage","React","lazy","Promise","all","__webpack_require__","e","then","bind","Front","UsersPage","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","ThemeProvider","Container","maxWidth","react_router_dom","react","fallback","exact","path","components_private","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","config","audience","configJson","objectSpread","domain","clientId","getConfig","providerConfig","redirectUri","ReactDOM","render","auth0_react_esm","src_App_0","document","getElementById","URL","process","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_2__","width","& > * + *","marginTop","spacing"],"mappings":"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","file":"static/js/main.a08e529b.chunk.js","sourcesContent":["import React from \"react\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <>\n      <h1>404 Page Not Found</h1>\n      <h1>\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n          ðŸ™„\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Loading from \"./Loading.js\";\r\n\r\nconst PrivateRoute = ({ component, ...args }) => (\r\n    <Route \r\n        component={withAuthenticationRequired(component, {\r\n            onRedirecting: () => <Loading />,\r\n        })}\r\n        {...args}\r\n    />\r\n\r\n);\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <Button style={{color: \"white\"}} onClick={() => loginWithRedirect()}>\r\n    Log In\r\n  </Button>;\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <Button style={{color: \"white\"}} onClick={() => logout({ returnTo: window.location.origin })}>\r\n      Log Out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react'\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { AppBar, Typography, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LoginButton from './LoginButton';\r\nimport LogoutButton from './LogoutButton';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    login: {\r\n        \r\n    },\r\n    arrow: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n\r\nexport default function Top() {\r\n\r\n    const { isAuthenticated, isLoading } = useAuth0();\r\n    const classes = useStyles();\r\n    // let history = useHistory();\r\n\r\n    // const handleBack = () => {\r\n    //     window.redirect(\"/\");\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar color=\"primary\">\r\n                <Toolbar className=\"top-container\">\r\n                    {/* {window.location.pathname.slice(0, 5) === '/user' ? \r\n                    <Button onClick={() => history.goBack()}>\r\n                        <ArrowBackIcon size=\"large\" className={classes.arrow}/>\r\n                    </Button> : null} */}\r\n                    <Typography variant=\"h4\" className={classes.title}>\r\n                        OSCARA\r\n                    </Typography>\r\n                    {!isLoading && isAuthenticated ? <LogoutButton className={classes.logout} color=\"inherit\"/> :\r\n                    !isLoading && !isAuthenticated ? <LoginButton className={classes.login} color=\"inherit\"/> : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","//https://community.auth0.com/t/react-with-auth0-spa-looses-login-after-refresh/35461\n//React Specific\nimport React, { Component, Suspense } from \"react\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n//Pages\nimport NoMatch from \"./pages/NoMatch\";\n//Components\nimport PrivateRoute from \"./components/private\";\nimport Top from './components/Top';\nimport \"./App.css\";\n//Material UI\nimport { Container } from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core/styles/';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst ProfilePage = React.lazy(() => import(\"./pages/ProfilePage\"));\nconst Front = React.lazy(() => import(\"./pages/Front\"));\nconst UsersPage = React.lazy(() => import(\"./pages/UsersPage\"));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#e15160',\n      main: '#aa1836',\n      dark: '#740011',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#508b90',\n      main: '#1f5e63',\n      dark: '#003439',\n      contrastText: '#fff',\n    },\n  },\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n          <Container maxWidth=\"lg\">\n          <Top/>\n            <BrowserRouter>\n              <Suspense fallback={<Loading/>}>\n                <Switch>\n                  <Route exact path=\"/\" component={Front}/>\n                  <PrivateRoute exact path=\"/profile\" component={ProfilePage}/>\n                  <PrivateRoute path=\"/user/\" component={UsersPage}/>\n                  <Route component={NoMatch} />\n                </Switch>\n              </Suspense>\n            </BrowserRouter>\n          </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { getConfig } from \"./config\";\n\nconst config = getConfig();\n\nconst providerConfig = {\n    domain: config.domain,\n    clientId: config.clientId,\n    ...(config.audience ? { audience: config.audience } : null),\n    redirectUri: window.location.origin,\n  };\n\nReactDOM.render (\n    <Auth0Provider {...providerConfig}>\n        <App />\n    </Auth0Provider>, document.getElementById(\"root\")\n);\n\nregisterServiceWorker();","import configJson from \"./auth_config.json\";\r\n\r\nexport function getConfig() {\r\n\r\n    const audience =\r\n        configJson.audience && configJson.audience !== \"YOUR_API_IDENTIFIER\"\r\n            ? configJson.audience\r\n            : null;\r\n\r\n    return {\r\n        domain: configJson.domain,\r\n        clientId: configJson.clientId,\r\n        ...(audience ? { audience } : null),\r\n    };\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    //   justifyContent: \"center\",\r\n    },\r\n}));\r\n\r\nfunction Loading() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <LinearProgress/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Loading;"],"sourceRoot":""}